"""RegulaciÃ³n de lo roles mediante Enum

Revision ID: c5ac79ec2685
Revises: 480508d77175
Create Date: 2024-06-18 19:55:34.417054

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'c5ac79ec2685'
down_revision: Union[str, None] = '480508d77175'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    userrole = postgresql.ENUM('REGULAR', 'ADMIN', name= 'userrole')
    userrole.create(op.get_bind(), checkfirst= True)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(),
               type_=userrole,
               existing_nullable=False,
               postgresql_using='role::userrole')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=userrole,
               type_=sa.VARCHAR(),
               existing_nullable=False)
    userrole.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
